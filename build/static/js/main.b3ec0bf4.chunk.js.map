{"version":3,"sources":["data.js","logo.svg","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Detail","props","useState","showAlert","setShowAlert","input","setInput","useEffect","axios","get","timer","setTimeout","console","log","clearTimeout","useParams","history","useHistory","seletItem","shoes","find","item","Box","styled","div","Title","h4","color","className","onChange","e","target","value","src","width","onClick","push","Card","index","App","Data","setShoes","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","as","to","NavDropdown","Item","Divider","exact","path","Jumbotron","Button","variant","map","i","type","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b3ec0bf4.chunk.js","sourcesContent":["export default [\n  {\n    id : 0,\n    title : \"White and Black\",\n    content : \"Born in France\",\n    price : 120000\n  },\n\n  {\n    id : 1,\n    title : \"Red Knit\",\n    content : \"Born in Seoul\",\n    price : 110000\n  },\n\n  {\n    id : 2, // 영국적인 id값\n    title : \"Grey Yordan\",\n    content : \"Born in the States\",\n    price : 130000\n  },\n\n\n] \n\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport './Detail.scss';\n\n// class Detail2 extends React.Component {\n//   componentDidMount(){\n//     // 컴포넌트가 Mount 되고나서 실행되는 코드\n//   }\n//   componentWillMount(){\n//     // 컴포넌트가 Unmount 되기전에 실행할 코드\n//   }\n// } \n\nfunction Detail(props) {\n  let [ showAlert, setShowAlert ] = useState(true);\n  let [ input, setInput ] = useState('');\n  // lifecycle hook = useEffect hook 컴포넌트가 mount되었을때 컴포넌트가 update가 될때 특정 코드 실행 \n  // useEffect 여러개 써도 상관없다. 하나 안에 사용한다던지 아니면 여러개를 사용하여 다시 만든다.\n  useEffect(() => {\n\n    axios.get(); // Detail 컴포넌트 등장시 실행할 코드, 업데이트가 x , 요청을 할 경우\n\n    let timer = setTimeout(() => { setShowAlert(false) }, 1000);\n    console.log('계속실행 ');\n    return () => { clearTimeout(timer) } // 버그가 생기는 부분도 고려해야 한다.\n    \n    // 업데이트가 될때도 실행이 된다.\n    // return function 어쩌구 () {  return 이건 > 함수를 실행 \n    //   실행코드\n    // }\n\n  },[]); \n  // [showAlert, input] showAlert라는 state가 변경이 될때만 되라 \n  // [] 업데이시엔 아무것도 없을 때만 실행이 되세요 / 딱 로드가 실행 될때 한번만 된다.\n  \n  let { id } = useParams(); // 사용자가 입력한 파라메터가 들어가있다. /:id 값 뒤로 오는 것들\n  let history = useHistory(); \n  let seletItem = props.shoes.find((item) => item.id = id);\n\n  // style component 이용 css를 미리 입혀놓은 컴포넌트 사용\n  let Box = styled.div`\n    flex: 1 auto;\n    padding : 20px;\n    text-align: center;\n  `;\n\n  let Title = styled.h4`\n    color: ${ props => props.color }\n  `; \n\n  // 컴포넌트가 많아지면 class가 겹칠일이 줄어든다. 편의성 이런건 잘 모르겠다.\n\n  return (\n    <div className=\"container\">\n    <div className=\"row\">\n      <Box>\n        <Title color={'red'}>Detail</Title> \n        <Title color=\"blue\">Detail</Title> \n        {/* color라는 props를 전달 */}\n      </Box>\n      <input onChange={(e) => {setInput(e.target.value)}} />\n      { input } \n      {/* 재랜더링 실행될때마다 */}\n      {\n        showAlert === true \n        ? (<div className=\"my-alert\">\n            <p>재고가 많이 남지 않았음</p>\n        </div>)\n        : null \n      }\n      <div className=\"col-md-6\">\n        <img src={ 'https://codingapple1.github.io/shop/shoes' + seletItem.id + '.jpg' } width=\"100%\" />\n      </div>\n      <div className=\"col-md-6 mt-4\">\n        <h4 className=\"pt-5 title-big\">{seletItem.title}</h4>\n        <p>{seletItem.content}</p>\n        <p>{seletItem.price}</p>\n        <button className=\"btn btn-danger\">주문하기</button> \n        <button className=\"btn btn-danger\" onClick={() => { history.push('/sdkfjlksjfdlksd')}}>뒤로가기</button> \n      </div>\n    </div>\n  </div> \n  )\n}\n\nexport default Detail;","import { Navbar, Nav, NavDropdown, Button, Jumbotron } from 'react-bootstrap';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport Data from './data';\nimport Detail from './Detail';\nimport axios from 'axios';\n\nimport { Link, Route, Switch } from 'react-router-dom';\n\n// 컴포넌트 lifecycle \n// hook 컴퍼넌트 중간에 뭔가 명령어를 넣어줄 수 있다.\n\nfunction App() {\n\n  let [ shoes, setShoes ] = useState(Data); // 제일중요한 데이터는 App.js 상위컴포넌트에서 하위로 넘기는것\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\" className=\"\">\n        <Navbar.Brand href=\"#home\">Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n            <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n            <Nav.Link as={Link} to=\"/detail\">Detail</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Jumbotron className=\"bg-main\">\n            <h1>20% Season OFF</h1>\n            <p>\n              This is a simple hero unit, a simple jumbotron-style component for calling\n              extra attention to featured content or information.\n            </p>\n            <p>\n              <Button variant=\"primary\">Learn more</Button>\n            </p>\n          </Jumbotron>\n\n          <div className=\"container\">\n            <div className=\"row\">\n              {\n                shoes.map((item, i) => {\n                  return <Card shoes={shoes[i]} index={i} key={i} />\n                })\n              }\n            </div>\n          </div>\n          <button type=\"button\" className=\"btn btn-primary\" onClick={() => {\n            // 더보여줄 상품이 없을 경우, 근데 또 사옹자가 버튼을 누를경우\n            // 실패시 사용자에게 알림 ui를 제공한다.\n            // axios.post('서버URL', {id: 'id1111', pw: 1234}).then()\n            \n            // 로딩중이라는 ui 띄움\n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result) => {\n              console.log(result.data);\n              // 로딩중이라는 ui 안보이게 처리\n              setShoes([...shoes, ...result.data]);\n            })\n            .catch(() => {\n              // 로딩중이라는 ui 안보이게\n              console.log('실패');\n            })\n          \n          }}>더보기</button>\n\n        </Route>\n        {/* id: id */}\n        <Route path=\"/detail/:id\">\n          <Detail shoes={shoes} />\n        </Route>\n\n        <Route path=\"/:id\">\n          <div>아무 문자나 받는 URL 작성명 parameter 작성법</div>\n        </Route>\n\n      </Switch>\n\n      {/* <Route path=\"/어쩌구\"  component={Modal}></Route> */}\n    </div>\n  );\n}\n\n\nfunction Card(props) {\n  return(\n    <div className=\"col-md-4\">\n      <img src={ 'https://codingapple1.github.io/shop/shoes' + (props.index + 1) + '.jpg' } width=\"100%\"/>\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content }</p>\n      <span>{ props.shoes.price }</span>\n    </div>\n  )\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//router setting \nimport { BrowserRouter } from 'react-router-dom';\n// import { HashRouter } from 'react-router-dom'; #router 라우팅 안전하게 할수도 있다. # 뒤에 오는 것들은 서버에 요청이 안간다.\n// Browser은 셋팅이 필요할 수 있다.\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}